import{bq as i,br as n,bs as b,bu as c,bt as T,bv as d,bw as l,bB as m,bC as f,bo as x,bF as p,bG as E,b8 as B,bp as h,bH as y,bI as H,bx as g,bJ as u,bK as I,b6 as v,by as z,bD as S,bL as C,bM as O,bN as A,b5 as k,bO as L,bP as R,bz as w,bE as P,bA as U,b7 as q,bQ as F}from"./index-kMdOwXZx.js";import{F as K,a as N,I as V,b as D,c as J,d as M,T as j,q as Q,s as W,u as X,v as Y,y as Z,E as _,w as $,x as aa,B as sa,e as ea,C as ra,h as oa,j as ta,l as ia,f as na,D as ba,g as ca,i as Ta,k as da,n as la,o as ma,G as fa,H as xa,m as pa,r as Ea,K as Ba,L as ha,J as ya,M as Ha,N as ga,O as ua,z as Ia,A as va,p as za,t as Sa}from"./number-BXyQlpcU.js";function r({chains:a,id:s}){return a.find(e=>e.id===s)}export{i as BaseError,K as FeeCapTooHighError,n as IntegerOutOfRangeError,N as InvalidAddressError,V as InvalidChainIdError,b as InvalidHexBooleanError,D as InvalidLegacyVError,J as InvalidSerializableTransactionError,M as InvalidStorageKeySizeError,c as SizeExceedsPaddingSizeError,T as SizeOverflowError,d as SliceOffsetOutOfBoundsError,j as TipAboveFeeCapError,Q as assertTransactionEIP1559,W as assertTransactionEIP2930,X as assertTransactionLegacy,Y as blobsToCommitments,Z as blobsToProofs,l as boolToBytes,m as boolToHex,f as bytesToHex,_ as checksumAddress,$ as commitmentToVersionedHash,aa as commitmentsToVersionedHashes,sa as concatHex,ea as defineBlock,ra as defineChain,oa as defineTransaction,ta as defineTransactionReceipt,ia as defineTransactionRequest,x as etherUnits,r as extractChain,na as formatBlock,p as formatEther,ba as formatGwei,ca as formatLog,Ta as formatTransaction,da as formatTransactionReceipt,la as formatTransactionRequest,E as formatUnits,B as fromHex,ma as getTransactionType,h as gweiUnits,y as hexToBigInt,H as hexToBool,g as hexToBytes,u as hexToNumber,I as hexToString,fa as isAddress,v as isHex,xa as keccak256,pa as maxUint16,z as numberToBytes,S as numberToHex,C as pad,O as padBytes,A as padHex,k as parseEther,L as parseUnits,Ea as rpcTransactionType,Ba as serializeAccessList,ha as serializeTransaction,ya as sha256,R as size,Ha as slice,ga as sliceBytes,ua as sliceHex,w as stringToBytes,P as stringToHex,Ia as toBlobSidecars,va as toBlobs,U as toBytes,q as toHex,za as toRlp,Sa as transactionType,F as trim};
